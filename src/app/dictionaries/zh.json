{
  "home": "首页",
  "profile": "小盛律师",
  "games": "游戏",
  "algorithms": "算法",
  "tools": "工具",
  "blog": "博客",
  "try": "玩一玩",
  "tableofcontents": "目录",
  "gomoku_title": "五子棋",
  "gomoku_description": "五子棋是一种双人对弈的纯策略型经典棋类游戏，本游戏支持自定义选择禁手规则，支持悔棋，欢迎来五子棋对战。",
  "black_turn": "黑方回合",
  "black_win": "黑方获胜",
  "white_turn": "白方回合",
  "white_win": "白方获胜",
  "start_game": "开始游戏",
  "game_over": "游戏结束!",
  "congratulations": "恭喜，你成功了!",
  "restart_game": "重新开始",
  "go_back": "返回",
  "first_move": "先手",
  "white": "白方",
  "undo_black": "黑方悔棋",
  "undo_white": "白方悔棋",
  "not_your_turn": "现在不是你的回合，不能悔棋",
  "no_undo_left": "没有剩余的悔棋次数",
  "three_three_forbidden": "{{player}}因三三禁手判负！",
  "long_connection_forbidden": "{{player}}因长连禁手判负！",
  "four_four_forbidden": "{{player}}形成四四禁手，游戏结束",
  "forbidden_move": "禁手：{{type}}",
  "three_three": "三三禁手",
  "four_four": "四四禁手",
  "long_connection": "长连禁手",
  "no_restriction": "无禁手",
  "forbidden_rules": "选择先手禁手",
  "game_mode": "模式",
  "local_mode": "单机对战",
  "online_mode": "联网对战",
  "room_status": "房间状态",
  "players": "玩家",
  "spectators": "观战",
  "copy_link": "复制链接",
  "network_error": "网络连接失败，请检查网络设置后重试",
  "server_error": "服务器暂时无法响应，请稍后重试",
  "unknown_error": "发生未知错误，请稍后重试",
  
  "chess_title": "中国象棋",
  "chess_description": "中国象棋游戏，简约的棋盘的基本布局，完整的游戏规则，黑红玩家轮换，将军，最后胜局判断等。还支持悔棋功能哦",
  "current_player": "{{player}} 回合",
  "player_in_check": "{{player}} 被将军",
  "checkmate_announcement": "将死！{{winner}}获胜！",
  "stalemate_announcement": "和棋！游戏平局",
  "red": "红方",
  "black": "黑方",
  "move_steps": "共计 {{steps}} 步",
  "undo_move": "悔棋",
  "tetris_title": "俄罗斯方块",
  "gain_score": "得分 {{score}}",
  "tetris_description": "经典的俄罗斯方块游戏，包括方块的旋转，移动，加速等。挑战你的空间感知能力和快速思考！",
  "bfs_path_title": "广度优先寻路",
  "bfs_path_description": "可视化展示广度优先寻路算法，给定一个网络，可以设置障碍物，起点，终点，然后展示寻路过程",
  "heap_title": "堆算法",
  "heap_description": "可视化展示堆操作，包括插入、删除等操作。动态显示每次操作的具体步骤，帮助理解堆操作的原理。",
  "insert_node": "插入节点",
  "delete_root": "删除最大值",
  "deleted_node": "被删节点",
  "input_number": "输入一个数字",
  "astar_title": "A* 寻路",
  "astar_description": "可视化展示 A* 寻路算法，给定一个网络，可以设置障碍物，起点，终点，然后展示寻路过程",
  "set_obstacles": "设置障碍物",
  "set_start_point": "设置起点",
  "set_end_point": "设置终点",
  "grid_width": "网格宽度",
  "grid_height": "网格高度",
  "search_speed": "搜索速度",
  "find_path": "查找路径",
  "reset_grid": "重置网格",
  "path_found": "找到了最短路径",
  "no_path_found": "找不到路径。",
  "set_start_end_points": "请设置起点和终点",
  "dijkstra_title": "Dijkstra 寻路",
  "dijkstra_description": "可视化展示 Dijkstra 寻路算法，给定一个网络，可以设置不同节点之间的权重，选择起点后，就可以计算到其他节点的最短路径",
  "submit": "提交",
  "weight": "权重",
  "weight_matrix": "权重矩阵",
  "select_start": "选择起点",
  "search_process": "搜索过程",
  "round": "轮次",
  "bar_chart_race_title": "动态条形图(开发中)",
  "bar_chart_race_description": "动态条形图通常用来展示数据随时间变化的情况，通过本页面可以自定义数据和时间，生成动态条形图，并且支持大量的自定义设置。",

  "2048_title": "2048 游戏",
  "2048_description": "2048 游戏，通过滑动方块，使相同数字的方块相加，最终得到 2048 数字即成功。",
  "reset": "重置",
  "one_step_win": "预设胜利",
  "one_step_fail": "预设失败",
  "select_language": "选择语言",
  "snake_title": "贪吃蛇",
  "snake_description": "经典的贪吃蛇游戏，通过键盘控制蛇的移动，吃到食物，蛇的身体会变长，同时速度会加快，直到撞到墙壁或者自己的身体。",

  "ratelimit_title": "窗口限流",
  "ratelimit_description": "限流是一种控制网络发送或接收的流量速率的策略，固定窗口限频和滑动窗口限频是最常见的限流算法，本页面展示了这两种算法的特点和对比。",
  "rate_limit_compare": "滑动窗口 VS 固定窗口限流对比",
  "rate_limit_qps": "1 秒请求数限制",
  "rate_limit_random": "生成随机请求",
  "total_request": "总请求数",
  "sliding_window_success": "滑动窗口成功",
  "sliding_window_fail": "滑动窗口失败",
  "fixed_window_success": "固定窗口成功",
  "fixed_window_fail": "固定窗口失败",

  "tokenbucket_title": "令牌桶",
  "tokenbucket_description": "令牌桶是一种限流算法，可以用来控制发送或接收的流量速率。可以设置桶的容量，令牌产生速度，以及请求速度，然后会绘制请求成功或者失败的曲线。",
  "token_bucket_chart": "令牌桶算法模拟",
  "time": "时间",
  "success_request": "成功请求数",
  "fail_request": "失败请求数",
  "remain_tokens": "剩余令牌数",
  "bucket_capacity": "桶容量",
  "token_rate": "每秒令牌产生数",
  "request_rate": "每秒请求数",
  "start": "开始",
  "pause": "暂停",
  "count": "计数",

  "trie_title": "前缀树",
  "trie_description": "前缀树是一种树形数据结构，用于存储关联数组，其中的键通常是字符串。本页面展示了前缀树的基本操作，包括插入、删除、搜索等。",
  "insert": "插入",
  "delete": "删除",
  "search": "查找",
  "random_initialize": "随机初始化",
  "enter_word": "输入单词",
  "words_in_trie": "前缀树中的单词",
  "find_word_in_trie": "{{word}} 在前缀树",
  "no_word_in_trie": "{{word}} 不在前缀树",

  "linkedlist_title": "单向链表",
  "linkedlist_description": "单向链表由一系列节点组成，每个节点包含数据和指向下一个节点的指针。本页面展示了单向链表的基本操作，包括插入、删除、搜索等。",
  "node_not_found": "节点未找到",
  "node_found_index": "在下标 {{index}} 找到节点",
  "enter_node_value": "输入节点值",
  "insert_after_pos": "在下标 {{index}} 后面插",
  "insert_at_end": "在链表尾部插",
  "click_node_to_remove": "选中节点删除",
  "remove_node_at": "删除下标 {{index}} 节点",

  "stack_title": "栈",
  "stack_description": "栈是一种后进先出（LIFO）队列，本页面可视化展示了栈的基本操作，包括入栈、出栈、调整栈高度等。",
  "nextElement": "下一个元素",
  "stackTop": "栈顶",
  "stackBottom": "栈底",
  "push": "入栈",
  "pop": "出栈",
  "stackHeight": "栈高度",
  "pushedElements": "入栈元素(按入栈顺序)",
  "poppedElements": "出栈元素(按出栈顺序)",
  "stackFull": "栈已满，无法入栈",
  "stackEmpty": "栈为空，无法出栈",
  "pushed": "入栈: {{item}}",
  "popped": "出栈: {{item}}",
  "stackReset": "栈已重置",
  "stackHeightAdjusted": "栈高度已调整为 {{height}}",
  "invalidNewHeight": "新高度小于当前栈大小，无法调整",

  "hashtable_title": "哈希表",
  "hashtable_description": "哈希表是用于高效地存储键值对，本页面可视化展示了哈希表的基本操作，包括插入、删除、搜索等。可以选择不同 hash 函数以及 hash 表大小，提供丰富的数据展示。",
  "hashTableVisualization": "哈希表可视化",
  "bucketSize": "桶大小",
  "hashFunction": "哈希函数",
  "simpleHash": "简单哈希",
  "addMode": "添加模式",
  "random": "随机",
  "sequential": "顺序",
  "add": "添加",
  "enterKeyToSearch": "输入要搜索的键",
  "enterKeyToDelete": "输入要删除的键",
  "key": "键",
  "value": "值",
  "totalItems": "总项目数",
  "loadFactor": "负载因子",
  "searchCompleted": "搜索完成，用时 {{steps}} 步。",
  "keyFoundInBucket": "在桶 {{index}} 中找到键。",
  "keyNotFound": "未找到键。最后检查的桶：{{index}}。",
  "found": "找到：{{key}}:{{value}}",
  "notFound": "未找到 {{key}}",
  "inserted": "已在索引 {{index}} 处插入 {{key}}:{{value}}",
  "deletedKey": "已删除键：{{key}}",
  "keyNotFoundForDelete": "未找到要删除的键：{{key}}",
  "bucket": "桶",
  "items": "项",
  "skiplist_title": "跳表",
  "skiplist_description": "跳表是一种随机化的数据结构，用于在有序链表中快速查找元素。本页面展示了跳表的基本操作，包括插入、删除、搜索等。",
  "settings": "设置",
  "max_level": "最高层数",
  "probability": "概率",
  "random_init": "随机初始化",
  "enter_number": "输入数字",
  "invalid_input": "请输入有效的数字",
  "insert_operation": "插入 {{value}}",
  "insert_success": "插入成功",
  "insert_fail": "插入失败，值已存在",
  "search_operation": "查找 {{value}}",
  "search_found": "找到",
  "search_not_found": "未找到",
  "delete_operation": "删除 {{value}}",
  "operation_success": "操作成功",
  "settings_updated": "跳表设置已更新",
  "random_init_success": "已随机初始化10个节点",
  "operation_result": "操作: {{operation}}, 结果: {{result}}",
  "subtitles_title": "图片拼接字幕",
  "subtitles_description": "轻松为图片拼接多条精美字幕！够快速创建专业级的字幕效果，支持自定义字体、颜色、大小和高度，还可添加渐变背景和特殊效果。无需下载软件，本地浏览器处理，图片不上传服务器，免费又安全。",
  "preview": "预览",
  "downloadImage": "下载图片",
  "replaceImage": "替换图片",
  "uploadToStart": "上传图片开始制作",
  "uploadImage": "上传图片",
  "subtitleContent": "字幕内容",
  "subtitlePlaceholder": "字幕 {{number}}",
  "addSubtitle": "新增字幕",
  "subtitleSettings": "字幕设置",
  "subtitleHeight": "字幕高度: {{percent}}%",
  "pixelHeight": " ({{pixels}}像素)",
  "fontSize": "字体大小: {{percent}}% 字幕高度",
  "pixelFontSize": " ({{pixels}}像素)",
  "fontColor": "字体颜色",
  "fontType": "字体类型",
  "microsoftYahei": "微软雅黑",
  "simsun": "宋体",
  "simhei": "黑体",
  "kaiti": "楷体",
  "fangsong": "仿宋",
  "textShadow": "文字阴影",
  "textStroke": "文字描边",
  "backgroundColor": "背景颜色",
  "backgroundOpacity": "背景透明度: {{opacity}}",
  "useGradientBackground": "使用渐变背景",
  "gradientEndColor": "渐变结束颜色",

  "dpcoin_title": "动态规划之硬币找零",
  "dpcoin_description": "动态规划硬币找零算法可视化，设置目标金额和可用的硬币面额，点击逐步计算按钮，观察如何一步步找到最优解。输出的状态转移过程列展示了算法如何从较小的问题构建出较大问题的解。",
  "targetAmount": "目标金额",
  "addCoinDenomination": "添加硬币面额",
  "currentCoinDenominations": "当前硬币面额",
  "stepByStep": "逐步计算",
  "quickComplete": "快速完成",
  "calculationResults": "结果 (当前金币: {{coins}})",
  "amount": "金额",
  "minCoins": "最少硬币数",
  "optimalCombination": "最优组合",
  "stateTransitionProcess": "状态转移过程",
  "removeCoin": "移除硬币",

  "hashring_title": "一致性哈希之哈希环",
  "hashring_description": "一致性哈希之哈希环可视化，清晰直观理解一致性 hash 的键值分配，增加删除节点的键值迁移。还支持设置虚拟节点(影子节点)，理解分布均衡优化的效果。",
  "position": "位置",
  "keysOnNode": "该节点上的键数量：{{count}}",
  "virtualNodes": "虚拟节点数：{{count}}",
  "first10Keys": "前10个键",
  "removeNode": "移除节点",
  "hash": "哈希值",
  "assignedTo": "分配给",
  "migratingTo": "正在迁移到",
  "node": "节点",
  "totalKeys": "总键数",
  "sampleKeys": "样本键",
  "actions": "操作",
  "remove": "移除",
  "numberOfNodes": "节点数量",
  "virtualNodesPerNode": "每个节点的虚拟节点数（0表示无）",
  "totalKeys_count": "总键数：{{count}}",
  "samplingRate": "采样率：{{rate}}",
  "initializeRing": "初始化环",
  "resetAll": "重置所有",
  "addNode": "添加节点",
  "add100Keys": "添加100个键",
  "add1000Keys": "添加1000个键",
  "nodeAdded": "已添加 {{nodeName}}。{{migratedCount}} 个键已迁移。",
  "cannotRemoveLastNode": "无法移除最后一个剩余的节点。",
  "nodeRemoved": "已移除 {{nodeName}}。{{migratedCount}} 个键已迁移。",

  "bloomfilter_title": "布隆过滤器",
  "bloomfilter_description": "布隆过滤器是一种空间高效的数据结构，用于快速检查一个元素是否在集合中。本页面可视化展示布隆过滤器的基本操作，包括插入、搜索等。",
  "predictedKeyCount": "预测key的个数 (n)",
  "hashFunctionCount": "哈希函数个数 (k)",
  "enterKey": "输入键",
  "check": "检查",
  "add10RandomKeys": "添加10个随机键",
  "add100RandomKeys": "添加100个随机键",
  "bitArraySize": "位数组大小 (m): {{m}}",
  "bitsPerKey": "每个key占用位数: {{k}}",
  "currentKeyCount": "当前键数量: {{count}}",
  "keysAtPosition": "位置 {{index}} 的键:",
  "mayExist": "可能在集合中",
  "definitelyNotExist": "一定不在集合中",

  "jumphash_title": "JumpHash 可视化",
  "jumphash_description": "JumpHash是 Google 发明的一种哈希算法，用于在分布式系统中做负载均衡。本页面展示 JumpHash 算法的工作原理，通过调整桶的数量和键的数量，观察键的分布情况。",
  "hashVisualization": "哈希可视化",
  "jumpHash": "跳跃哈希",
  "murmurhash": "MurmurHash",
  "numberOfBuckets": "桶的数量",
  "add10Keys": "添加10个键",

  "hanoitower_title": "汉诺塔可视化",
  "hanoitower_description": "可视化展示汉诺塔的解法。可以设置圆盘数量和移动速度，选择自动模式或者手动模式，获取提示，来理解如何通过递归算法解决汉诺塔问题。",
  "numberOfDisks": "圆盘数量",
  "speed": "速度（毫秒）",
  "mode": "模式",
  "manual": "手动",
  "auto": "自动",
  "continue": "继续",
  "getHint": "获取提示",
  "movesCount": "总步数：{{total}} / 最少步数：{{minimum}}",
  "hintMessage": "提示：从塔 {{from}} 移动到塔 {{to}}",
  "noHintAvailable": "没有可用的提示。您可能已经完成了游戏！",
  "moveSuccess": "移动成功！",
  "moveFailure": "移动失败。大圆盘不能放在小圆盘上。",
  "gameCompleted": "恭喜！您已经完成了汉诺塔问题！",

  "binarysearchtree_title": "二叉搜索树可视化",
  "binarysearchtree_description": "可视化展示二叉搜索树算法。可以设置节点数量以及随机化方式，可以插入、查找和删除节点，理解二叉搜索树的工作原理。",
  "nodeCount": "节点数量 (1-50)",
  "initMethod": "初始化方法",
  "initializeTree": "初始化树",
  "enterNumber": "输入一个数字",
  "initializedTree": "已使用{{method}}方法初始化包含{{count}}个节点的树",
  "inserted_value": "已插入 {{value}}",
  "deleted_value": "已删除 {{value}}",
  "found_value": "找到 {{value}}",
  "notFound_value": "未找到 {{value}}",

  "chartrace_title": "竞速条形图",
  "chartrace_description": "上传数据，自定义时间、类型和数据列，然后就能生成漂亮的动态竞速条形图，还可以导出为 GIF。",
  "jsonParseError": "JSON 解析错误",
  "selectAllColumns": "请选择所有必要的列",
  "uploadedFile": "已上传文件",
  "clickToUpload": "点击上传文件",
  "raceChart": "竞速图",
  "dataPreview": "数据预览",
  "type": "类型",
  "pleaseSelect": "请选择",
  "chartTitle": "图表标题（可选）",
  "enterChartTitle": "输入图表标题",
  "generateChart": "生成图表",
  "exportGif": "导出 GIF",
  "generatingGif": "正在生成 GIF...",
  "hint": "提示",
  "dynamicChartsIndexTitle": "重要数据动态图表",
  "personalGenerate": "定制图表",
  "uploadFileDoc": "本工具支持上传 JSON, CSV, XLSX, XLS 文件，请确保数据格式正确。本工具在浏览器本地处理文件，不会上传文件到服务器。",
  "dynamicChartsIndexDoc": [
    "这里汇集了一系列随时间变化的重要指标数据，每个图表都展示了不同领域的关键数据趋势，让您能够直观地了解各种指标的历史变化和未来走向。\n\n",
    "图表涵盖了多个领域，包括但不限于：\n",
    "- 人口统计：展示世界各国人口增长趋势\n",
    "- 经济指标：呈现GDP、通货膨胀率等经济数据的变化\n",
    "- 科技发展：显示互联网用户数量、智能手机普及率等技术指标的演变\n",
    "- 社会发展：展示教育水平、医疗保健覆盖率等社会进步指标\n\n",
    "每个图表都采用了动态条形图的形式，让数据的变化过程更加直观和生动。部分公开数据还提供了下载链接，方便您进行进一步的分析和研究。\n\n",
    "也可以用自己的私有数据，生成定制化的动态图表。"
  ],
  "ChartsIndexTableTitle": "标题",
  "ChartsIndexTableIntro": "介绍",
  "ChartsIndexTableDataSource": "数据源",
  "ChartsIndexSearchPlaceholder": "搜索标题或介绍",
  "moreChartRace": "这里有一批生成好的动态条形图，涵盖各种有趣的数据。",
  "clickHere": "点击查看",

  "sudoku_title": "数独填字游戏",
  "sudoku_description": "经典的数独游戏，支持免费在线玩。可以生成随机数独题目，支持选择题目难度，支持撤销操作以及提示功能。欢迎来玩～",
  "easy": "简单",
  "medium": "中等",
  "hard": "困难",
  "expert": "专家",
  "mistakes": "错误",
  "selectDifficulty": "选择难度",
  "newGame": "新游戏",
  "undo": "撤销",
  "showHints": "显示提示",
  "hideHints": "隐藏提示",
  "gameOver": "游戏结束！错误次数超过3次。",
  "congratulations_sudo": "恭喜！你已经完成了数独谜题！",

  "cube_title": "3D 在线魔方",
  "cube_description": "经典的魔方智力游戏，免费在线玩 3D 魔方。支持随机打乱、旋转视角、滑动魔方、获取魔方玩法提示。代码开源，免费在线玩魔方。",
  "scramble": "随机打乱魔方",

  "fileUpload_dragHere": "将文件拖到此处，或",
  "fileUpload_clickUpload": "点击上传",
  "fileUpload_sizeLimit": "仅支持{{accept}}文件，且不超过{{size}}MB",
  "gendocx_title": "Word 文档生成器",
  "gendocx_description": "上传 Excel 文件和 Word 模板，支持根据 excel 中的内容批量生成 Word 文档，支持下载全部和单个下载。界面优美简单，一键生成大量重复 word 文档。",
  "gendocx_uploadExcel": "上传Excel文件",
  "gendocx_uploadWord": "上传Word模板",
  "gendocx_generate": "生成文档",
  "gendocx_generating": "生成中...",
  "gendocx_downloadAll": "下载全部",
  "gendocx_download": "下载",
  "gendocx_status_pending": "待生成",
  "gendocx_status_failed": "失败",
  "gendocx_status_generated": "已生成",
  "gendocx_pageSize": "每页显示：",
  "gendocx_items": "条",
  "gendocx_showing": "显示第",
  "gendocx_to": "到",
  "gendocx_total": "条，共",
  "gendocx_prevPage": "上一页",
  "gendocx_nextPage": "下一页",
  "gendocx_fileName": "文件名",
  "gendocx_status": "状态",
  "gendocx_error_noFiles": "请先上传Excel文件和Word模板",
  "gendocx_error_worksheet": "无法读取工作表",
  "gendocx_error_generate": "生成文档时出错: {{message}}",
  "gendocx_error_download": "下载失败，请重试",
  "gendocx_error_excel": "读取 Excel 文件失败",
  "fileUpload_sizeExceeded": "文件大小不能超过 {{size}}MB",
  
  "game_settings": "游戏设置",
  "board_size": "棋盘大小",
  "difficulty": "难度",
  "difficulty_easy": "简单",
  "difficulty_medium": "中等",
  "difficulty_hard": "困难",
  "manual_setup": "手动设置",
  "finish_editing": "完成编辑",
  "new_game": "随机重置",
  "solving": "求解中...",
  "solve": "智能求解",
  "next_move": "下一步",
  "remaining_steps": "剩余步数",
  "puzzle_solved": "恭喜！用了 {{moves}} 步完成拼图！",
  "unsolvable_puzzle_message": "当前布局无解，请重新设置！\n\n对于{{size}}的棋盘，{{rule}}",
  "solvable_rule_odd": "逆序数必须为偶数才可解",
  "solvable_rule_even": "逆序数加上空格所在行数（从底部数）必须为奇数才可解",
  "empty_space": "空格",
  "cancel": "取消",
  "moves": "步",
  "move_direction": "移动 {{number}} 方向 {{direction}}",
  "direction_up": "上",
  "direction_down": "下",
  "direction_left": "左",
  "direction_right": "右",
  "sliding_title": "在线免费数字华容道",
  "sliding_description": "经典的数字华容道游戏，支持随机生成不同难度，不同大小的开局，支持自定义每个格子的数字布局，支持获取智能求解方案！代码开源，免费在线玩",

  "chartrace": {
      "population-growth": {
        "title": "世界人口变化(1800-2015)",
        "intro": "世界人口从1800年开始呈现出持续的增长趋势，尤其是进入19世纪末和20世纪初时，人口增长速度显著加快。19世纪后期的工业革命及其带来的经济发展，改善了全球大部分国家的生活条件，促使人口加速增长。从20世纪中期开始，发展中国家如中国和印度的人口增长极为迅速。相比发展中国家，进入20世纪后，高收入国家的人口增长率逐渐放缓。"
      },
      "income-growth": {
        "title": "全球收入变化(1800-2015)",
        "intro": "英国在1800年时的收入已经比许多国家高出数倍，工业革命大大拉开了高收入国家与其他国家的差距。相比工业化国家，像印度、中国、非洲一些国家的收入水平在19世纪大部分时间内变化不大。20世纪末和21世纪初，中国、印度等新兴经济体的快速发展，使得这些国家的收入水平逐渐赶上高收入国家。尽管全球收入在20世纪后期整体增长，但高收入国家和低收入国家之间的收入差距依然存在。全球收入的变化经历了巨大的不平衡发展，早期由工业革命推动的发达国家收入增长占主导，后来新兴经济体的崛起带来了收入格局的转变，但全球收入差距依然显著。"
      },
      "china_gdp": {
        "title": "中国各省GDP变化(2004-2023)",
        "intro": "中国经济在过去20年中经历了显著增长。以广东省为例，其GDP从2004年的18658.3亿元增长到2023年的135673.2亿元，增长了约6.3倍。通过比较各地区不同时期的增长率，可以发现经济增速整体呈现放缓趋势。例如，广东省在2004-2013年期间的年均增长率约为14.4%，而2014-2023年期间降至约8.0%。这表明中国经济正在从高速增长阶段转向高质量发展阶段。北京和上海作为直辖市，其GDP总量相对较高，这可能反映了它们作为金融、科技和服务业中心的地位。即使在全球经济面临挑战的情况下（如2020年），大多数地区仍保持了正增长，这体现了中国经济的韧性。"
      },
      "china_population": {
        "title": "中国各省人口变化(2004-2023)",
        "intro": "中国各省份在人口变化上呈现明显的分化趋势。总体而言，东部沿海发达地区（如北京市、广东省、上海市）的人口增长较为显著，平均增幅在 1.5%-2% 之间。这些地区吸引了大量的流动人口，经济发展和就业机会丰富是主要原因。相反，东北地区（如黑龙江省、吉林省）出现了人口负增长，黑龙江省人口减少最为严重，下降了 1.15%。这些地区面临着产业衰退和人口外流的双重压力。此外，中西部部分省份（如贵州、甘肃）人口增长也趋缓。未来人口变化的重点可能集中在城镇化推进与区域经济发展差距加剧之间的关系上，东部经济中心可能持续吸引人口，而经济结构单一的省份则将面临人口流失的挑战。"
      },
      "china_income": {
        "title": "中国各省财政收入变化(2004-2023)",
        "intro": "分析揭示了中国各省份财政收入的显著区域差异，沿海省份如广东、江苏的收入远高于内陆省份如西藏、青海，反映了经济发展的不平衡。尽管如此，2004-2023年间大多数省份呈现持续增长趋势，体现了中国经济的整体发展。然而，近年来增速普遍放缓，可能反映了经济转型和结构调整的影响。值得注意的是，部分省份如贵州、西藏的财政收入增长较快，可能与国家区域发展战略和扶持政策密切相关。同时，经济结构多元化的省份，如广东和浙江，在面对经济波动时表现出更强的韧性，这凸显了产业多样性对财政稳定的重要性。"
      },
      "china_outcome": {
        "title": "中国各省财政支出变化(2004-2023)",
        "intro": "分析揭示了中国各省份财政支出呈现持续增长趋势，反映了政府不断加大对民生和经济发展的投入。然而，支出规模和增速存在显著的区域差异，经济发达的东部沿海省份如广东、江苏的支出规模远超西部省份如青海、宁夏，体现了财政实力的巨大差距。值得注意的是，部分中西部省份如四川、贵州的支出增速较快，可能与国家区域平衡发展战略密切相关。"
      } 
  },

  "seo": {
    "index": {
      "title": "AI 写代码",
      "description": "Claude3.5 辅助写代码，生成各种好玩的页面，包括各种游戏，算法可视化展示，以及有用的工具",
      "keywords": "Claude3.5, AI 辅助写代码"
    },
    "algorithms": {
      "title": "开源算法可视化",
      "description": "通过 Claude3.5 和 GPT4 生成各种算法的可视化演示，包括字典树、链表、栈、速率限制、路径查找和哈希表。",
      "keywords": "算法可视化,数据结构,在线可视化"
    },
    "games": {
      "title": "开源 React 游戏",
      "description": "通过 Claude3.5 和 GPT4 生成各种经典游戏，如五子棋、中国象棋、俄罗斯方块等。这些游戏使用 React 编写，开源且可在线游玩。",
      "keywords": "五子棋,中国象棋,俄罗斯方块,贪吃蛇,2048,源代码游戏,React 游戏,GPT-4 游戏,Claude 3.5 游戏"
    },
    "tools": {
      "title": "其他",
      "description": "通过 Claude3.5 和 GPT4 生成各种有用的工具。比如竞速图生成等",
      "keywords": "竞速图生成"
    },
    "linkedlist": {
      "title": "链表可视化",
      "description": "交互式链表可视化展示。探索链表操作的动态动画,包括插入、删除和遍历。适合学生、开发者和算法爱好者直观理解数据结构概念。",
      "keywords": "链表可视化,链表操作,链表动画"
    },
    "hashtable": {
      "title": "哈希表可视化",
      "description": "交互式哈希表可视化展示。了解哈希表的工作原理,可视化哈希表操作,以有趣的方式理解哈希表概念。",
      "keywords": "哈希表可视化,哈希表操作,哈希表数据结构,可视化哈希表操作,哈希表插入,哈希表搜索,哈希表删除,实时哈希表可视化,哈希表教程,学习哈希表,数据结构可视化"
    },
    "astar": {
      "title": "A* 算法可视化",
      "description": "交互式 A* 寻路算法可视化展示。探索 A* 的工作原理，提升你的算法知识。源代码可用。",
      "keywords": "A* 算法,A-star 算法,寻路算法,算法可视化,学习 A* 算法,算法教育"
    },
    "bfs_path": {
      "title": "BFS 可视化",
      "description": "交互式 BFS 寻路算法可视化展示。探索广度优先搜索的工作原理,提升你的算法知识。源代码可用。",
      "keywords": "BFS 算法,广度优先搜索,寻路算法,算法可视化,学习 BFS,算法教育"
    },
    "stack": {
      "title": "栈可视化",
      "description": "交互式栈操作可视化工具，帮助你理解和可视化栈数据结构的基本操作。适合想要增进对栈操作(如压栈、出栈和查看栈顶元素)理解的学生、教育工作者和编程爱好者。",
      "keywords": "栈可视化,栈数据结构,可视化栈操作,栈压入,栈弹出,栈顶元素,实时栈可视化,栈教程,学习栈,数据结构可视化"
    },
    "dijkstra": {
      "title": "Dijkstra 算法可视化",
      "description": "通过交互式可视化学习和理解 Dijkstra 最短路径算法。探索 Dijkstra 算法的工作原理,提升你的算法知识。源代码可用。",
      "keywords": "Dijkstra 算法,最短路径算法,寻路算法,算法可视化,学习 Dijkstra 算法,算法教育"
    },
    "trie": {
      "title": "字典树可视化",
      "description": "前缀树操作的交互式可视化。探索字典树数据结构的插入、搜索和删除动画。通过逐步的视觉解释学习算法概念。",
      "keywords": "前缀树,字典树,数据结构,算法可视化,交互式动画,计算机科学教育,编码教程"
    },
    "heap": {
      "title": "堆可视化",
      "description": "通过交互式可视化学习和理解堆算法。探索堆排序的工作原理,提升你的算法知识。源代码可用。",
      "keywords": "堆算法,堆排序,算法可视化,学习堆排序,数据结构,算法教育"
    },
    "ratelimit": {
      "title": "窗口限流器",
      "description": "探索固定窗口和滑动窗口限流技术的交互式可视化。实时理解这些关键的 API 流量管理方法的工作原理。",
      "keywords": "限流,固定窗口,滑动窗口,API 流量管理,请求节流,限流可视化"
    },
    "tokenbucket": {
      "title": "令牌桶可视化",
      "description": "探索令牌桶算法的交互式可视化,这是网络流量整形和限流的关键技术。了解该算法如何管理数据流,防止系统过载,并确保计算机网络和 API 中的公平资源分配。",
      "keywords": "令牌桶算法,限流,算法可视化,交互式学习"
    },
    "game2048": {
      "title": "开源2048游戏",
      "description": "开源的 React 经典 2048 游戏！支持在线玩，合并数字,达到 2048 方块赢得胜利。",
      "keywords": "2048,经典 2048 游戏,数字拼图游戏,在线玩 2048,Claude 3.5,React 2048 游戏"
    },
    "chess": {
      "title": "开源中国象棋",
      "description": "开源的 React 经典中国象棋游戏，支持完整的游戏规则，可以在线玩。",
      "keywords": "中国象棋,在线象棋,免费象棋游戏,玩中国象棋,在线象棋"
    },
    "tetris": {
      "title": "开源俄罗斯方块",
      "description": "开源的 React 俄罗斯方块游戏在线版。无需下载，现在就开始玩俄罗斯方块,还可以改动代码",
      "keywords": "俄罗斯方块,在线玩俄罗斯方块,免费俄罗斯方块游戏,经典俄罗斯方块,在线益智游戏,俄罗斯方块策略"
    },
    "gomoku": {
      "title": "开源五子棋",
      "description": "开源的 React 五子棋游戏在线版。无需下载，现在就开始你的五子棋对战！",
      "keywords": "五子棋,在线玩五子棋,免费五子棋游戏,五子棋策略,Claude 编写的五子棋,在线棋盘游戏"
    },
    "snake": {
      "title": "开源贪吃蛇",
      "description": "开源的 React 经典免费贪吃蛇在线版。控制蛇吃食物,变得更长,避免撞到墙壁或蛇的身体。无需下载，源代码开放。",
      "keywords": "贪吃蛇,在线玩贪吃蛇,免费贪吃蛇游戏,贪吃蛇吃食物,Claude 编写的贪吃蛇,在线贪吃蛇游戏"
    },
    "sudoku": {
      "title": "开源在线免费数独游戏",
      "description": "开源的 React 数独 sudoku 游戏。在线数独，挑战你的逻辑思维!提供多种难度级别，从简单到专家，适合所有技能水平的玩家。包括实时错误检查、提示系统和计时器，独特的键盘和鼠标输入支持，游戏体验流畅。",
      "keywords": "数独,在线玩数独,免费数独游戏,Claude 编写的数独,在线数独游戏"
    },
    "chartrace": {
      "title": "在线生成条形图竞赛",
      "description": "条形图竞赛是一种展示数据随时间变化的动态条形图。本页面允许你自定义数据和时间,生成动态条形图,并支持大量自定义设置。",
      "keywords": "条形图竞赛,数据可视化,数据可视化工具,CSV 转条形图竞赛,Excel 转条形图竞赛",
      "dynamicCharts": {
        "title": "重要数据动态图表",
        "description": "这里汇集了一系列随时间变化的重要指标数据，每个图表都展示了不同领域的关键数据趋势，让您能够直观地了解各种指标的历史变化和未来走向。",
        "keywords": "动态条形图,数据可视化,历史指标数据变化,条形动态图,线性动态图"
      },
      "population-growth": {
        "title": "世界人口变化(1800-2015)",
        "description": "世界人口从1800年以来经历了快速增长的阶段，尤其是20世纪中期的“人口爆炸”现象，使得全球人口迅速接近现今的几十亿规模。亚洲的快速增长使得其在人口分布中的份额大幅增加。",
        "keywords": "世界人口增长,人口统计,数据可视化,条形动态图,线性动态图"
      },
      "income-growth": {
        "title": "全球收入变化(1800-2015)",
        "description": "全球收入的变化经历了巨大的不平衡发展，早期由工业革命推动的发达国家收入增长占主导，后来新兴经济体的崛起带来了收入格局的转变，但全球收入差距依然显著。不同地区的收入增长率差异明显。",
        "keywords": "世界收入增长,收入统计,数据可视化,条形动态图,线性动态图"
      },
      "china_gdp": {
        "title": "中国各省GDP变化(2004-2023)",
        "description": "中国GDP增长（2004-2023年）：可视化各省经济转型。观察增长率如何从快速扩张演变为注重高质量发展。探索区域差异、主要城市的影响，以及中国经济面对全球挑战时展现的韧性。",
        "keywords": "中国GDP增长, 各省份GDP统计,GDP数据可视化,条形动态图,线性动态图"
      },
      "china_population": {
        "title": "中国各省人口变化(2004-2023)",
        "description": "中国各省份的人口变化显示出明显的区域差异，东部沿海地区如北京、广东、上海人口持续增长，而东北地区如黑龙江和吉林则面临人口负增长。未来，城镇化和区域经济发展差距将对人口分布产生重要影响。",
        "keywords": "中国人口增长,各省份人口统计,人口数据可视化,条形动态图,线性动态图"
      },
      "china_income": {
        "title": "中国各省财政收入变化(2004-2023)",
        "description": "本分析运用线性动态图和条形动态图，生动展示了中国各省份2004年至2023年的财政收入变化趋势。通过这些直观的可视化工具，我们清晰地呈现了显著的区域经济差异、持续的增长态势、增速放缓现象、区域发展政策的影响，以及经济结构多元化对财政收入的影响。动态图表不仅展示了静态数据，还呈现了财政收入的动态变化过程，为读者提供了更深入、更全面的理解。",
        "keywords": "中国省份财政收入统计,财政收入数据可视化,条形动态图,线性动态图"
      },
      "china_outcome": {
        "title": "中国各省财政支出变化(2004-2023)",
        "description": "本分析运用线性动态图和条形动态图，生动展示了中国各省份2004年至2023年的财政支出变化趋势。通过这些直观的可视化工具，我们清晰地呈现了财政支出的持续增长、区域差异、政策影响和经济发展特征。动态图表不仅展示了静态数据，还呈现了财政支出的动态变化过程，让读者能够直观地感受到各省份财政实力的变迁和政策导向的转变。",
        "keywords": "中国省份财政支出统计,财政支出数据可视化,条形动态图,线性动态图"
      }
    },
    "skiplist": {
      "title": "跳表可视化",
      "description": "跳表是一种随机化的数据结构，用于在有序链表中快速查找元素。本页面展示了跳表的基本操作，包括插入、删除、搜索等。",
      "keywords": "跳表,数据结构,算法可视化,跳表操作,跳表可视化"
    },
    "subtitles": {
      "title": "在线图片拼接字幕工具",
      "description": "轻松为图片拼接多条精美字幕！自定义字体、颜色、大小和位置，还可添加渐变背景和特殊效果。无需下载软件，本地浏览器处理，图片不上传服务器，免费又安全。",
      "keywords": "图片字幕工具, 在线字幕拼接, 图片字幕拼接"
    },
    "dpcoin":{
      "title": "动态规划硬币方案可视化",
      "description": "探索动态规划算法的硬币找零问题。这个交互式可视化工具帮助你理解最优子结构和重叠子问题，是学习算法和计算机科学的理想资源。",
      "keywords": "动态规划,硬币找零,算法可视化,最优化问题,算法学习"
    },
    "hashring":{
      "title": "一致性哈希: HashRing 可视化",
      "description": "友好的一致性 hash 环可视化演示，支持 hash 的各种操作，交互式演示方便理解节点添加、移除和键分配迁移过程。",
      "keywords": "算法可视化,一致性 hash,hash 环, 虚拟节点,hash可视化" 
    },
    "bloomfilter": {
      "title": "布隆过滤器可视化",
      "description": "动态友好的布隆过滤器演示页面，直观展示布隆过滤器的插入和搜索操作，帮助理解布隆过滤器的工作原理。以 LevelDB 的布隆过滤器为参考，增加了可视化，开放源码。",
      "keywords": "布隆过滤器,算法可视化,布隆过滤器操作,布隆过滤器可视化"
    },
    "jumphash": {
      "title": "一致性哈希: JumpHash 可视化",
      "description": "动态友好的一致性 jumphash 算法演示，支持增加 bucket，增加 key，然后观察 key 的迁移。还支持切换不同 hash，观察区别。",
      "keywords": "一致性 hash, jumphash可视化, 负载均衡, hash 算法可视化"
    },
    "hanoitower": {
      "title": "汉诺塔游戏",
      "description": "经典的汉诺塔问题，从任意初始状态开始，用递归算法找到后续步骤。可以调整圆盘数量，选择手动或自动模式，获取提示，切换模式，源码开放。",
      "keywords": "汉诺塔,汉诺塔解法,汉诺塔可视化,汉诺塔算法"
    },
    "binarysearchtree": {
      "title": "二叉搜索树可视化",
      "description": "通过交互式可视化探索二叉搜索树算法。学习二叉搜索树的工作原理，并实时理解其应用。开放源代码，可查看原理。",
      "keywords": "二叉搜索树,算法可视化,二叉搜索树操作,二叉搜索树可视化"
    },
    "cube": {
      "title": "在线免费3D魔方游戏",
      "description": "经典的魔方智力游戏，免费在线玩 3D 魔方。支持随机打乱、旋转视角、滑动魔方、获取魔方玩法提示。代码开源，免费在线玩魔方",
      "keywords": "3D魔方,在线玩3D魔方,免费3D魔方游戏,3D魔方策略,在线魔方游戏"
    },
    "gendocx": {
      "title": "在线批量生成 Word 文档",
      "description": "上传 Excel 文件和 Word 模板，批量生成 Word 文档，支持下载所有。美观的界面，简单的操作，批量生成大量 Word 文档。",
      "keywords": "Word 文档生成器, Excel 转 Word, 批量生成 Word, Word 文档下载"
    },
    "sliding": {
      "title": "在线数字华容道拼图",
      "description": "经典的在线免费数字华容道拼图游戏。支持随机生成不同难度和不同大小的起始布局，支持自定义每个格子的数字，支持获取智能解法方案！代码开源，免费在线玩！",
      "keywords": "数字滑块拼图, 在线数字华容道，免费数字华容道"
    }
  }
}